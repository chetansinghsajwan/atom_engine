# BasedOnStyle: Microsoft

Language: Cpp
DisableFormat: false

# --------------------------------------------------------------------------------------------------
# Indentation
# --------------------------------------------------------------------------------------------------

TabWidth: 4
ColumnLimit: 100
IndentWidth: 4
ContinuationIndentWidth: 4
ConstructorInitializerIndentWidth: 4
IndentAccessModifiers: false
AccessModifierOffset: -4
IndentCaseLabels: true
IndentCaseBlocks: false
IndentExternBlock: AfterExternBlock
IndentGotoLabels: false
IndentPPDirectives: AfterHash
IndentRequiresClause: true
IndentWrappedFunctionNames: false
LambdaBodyIndentation: Signature
NamespaceIndentation: All
RequiresExpressionIndentation: OuterScope

# --------------------------------------------------------------------------------------------------
# Spaces
# --------------------------------------------------------------------------------------------------

BitFieldColonSpacing: After
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: true
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: false
SpaceBeforeInheritanceColon: false
SpaceBeforeParens: ControlStatements
SpaceBeforeParensOptions:
  AfterControlStatements: true
  AfterForeachMacros: true
  AfterFunctionDefinitionName: false
  AfterFunctionDeclarationName: false
  AfterIfMacros: true
  AfterOverloadedOperator: false
  AfterRequiresInClause: false
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: Never
SpacesInCStyleCastParentheses: false
SpacesInLineCommentPrefix:
  Minimum: 1
  Maximum: -1
SpacesInParens: Never
SpacesInSquareBrackets: false

# --------------------------------------------------------------------------------------------------
# Alignments
# --------------------------------------------------------------------------------------------------

AlignAfterOpenBracket: DontAlign
AlignArrayOfStructures: Left
AlignConsecutiveAssignments:
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: false
  PadOperators: true
AlignConsecutiveBitFields:
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: false
  PadOperators: false
AlignConsecutiveDeclarations:
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: false
  PadOperators: false
AlignConsecutiveMacros:
  Enabled: false
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCompound: false
  PadOperators: false
AlignConsecutiveShortCaseStatements:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
  AlignCaseColons: false
AlignEscapedNewlines: Right
AlignOperands: Align
AlignTrailingComments:
  Kind: Always
  OverEmptyLines: 0
DerivePointerAlignment: false
PointerAlignment: Left
ReferenceAlignment: Pointer
QualifierAlignment: Custom
QualifierOrder: [ 'static', 'constexpr', 'inline', 'const', 'volatile', 'type' ]

# --------------------------------------------------------------------------------------------------
# Break
# --------------------------------------------------------------------------------------------------

AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes
BreakArrays: true
BreakAfterAttributes: Always
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeConceptDeclarations: Always
BreakBeforeBraces: Custom
BraceWrapping:
  AfterNamespace: true
  AfterClass: true
  AfterStruct: true
  AfterUnion: true
  AfterEnum: true
  AfterFunction: true
  BeforeWhile: true
  BeforeElse: true
  BeforeCatch: true
  AfterCaseLabel: true
  AfterExternBlock: true
  BeforeLambdaBody: false
  AfterControlStatement: Always
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: true
BreakStringLiterals: true
BreakConstructorInitializers: AfterColon
BreakInheritanceList: AfterColon
AllowBreakBeforeNoexceptSpecifier: Never
RequiresClausePosition: OwnLine

# --------------------------------------------------------------------------------------------------
# Includes
# 
# To Do: Review these
# --------------------------------------------------------------------------------------------------

IncludeBlocks: Preserve
IncludeCategories: 
  - Regex: '^"(llvm|llvm-c|clang|clang-c)/'
    Priority: 2
    SortPriority: 0
    CaseSensitive: false
  - Regex: '^(<|"(gtest|gmock|isl|json)/)'
    Priority: 3
    SortPriority: 0
    CaseSensitive: false
  - Regex: '.*'
    Priority: 1
    SortPriority: 0
    CaseSensitive: false
IncludeIsMainRegex: '(Test)?$'
IncludeIsMainSourceRegex: ''
SortIncludes: CaseSensitive

# --------------------------------------------------------------------------------------------------
# Penalties
# --------------------------------------------------------------------------------------------------

PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakOpenParenthesis: 0
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyIndentedWhitespace: 0
PenaltyReturnTypeOnItsOwnLine: 1000

# --------------------------------------------------------------------------------------------------
# Macros
# --------------------------------------------------------------------------------------------------

Macros:
AttributeMacros: ['fn']
ForEachMacros: []
IfMacros: []
MacroBlockBegin: ''
MacroBlockEnd: ''
StatementAttributeLikeMacros: []
StatementMacros: []
WhitespaceSensitiveMacros: []

# --------------------------------------------------------------------------------------------------
# Misc
# --------------------------------------------------------------------------------------------------

Standard: Latest
AllowAllArgumentsOnNextLine: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Always
AllowShortCaseLabelsOnASingleLine: true
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Empty
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
BinPackArguments: true
BinPackParameters: true
FixNamespaceComments: false
InsertBraces: false
CompactNamespaces: false
Cpp11BracedListStyle: false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
ExperimentalAutoDetectBinPacking: false
PackConstructorInitializers: NextLineOnly
ReflowComments: false
RemoveParentheses: MultipleParentheses
RemoveSemicolon: false
SeparateDefinitionBlocks: Always
ShortNamespaceLines: 1
SortUsingDeclarations: LexicographicNumeric
IntegerLiteralSeparator: 
  Binary: 0
  BinaryMinDigits: 0
  Decimal: 0
  DecimalMinDigits: 0
  Hex: 0
  HexMinDigits: 0
InsertNewlineAtEOF: true
KeepEmptyLinesAtEOF: true
KeepEmptyLinesAtTheStartOfBlocks: false
LineEnding: DeriveLF
MaxEmptyLinesToKeep: 1
CommentPragmas: ''
UseTab: Never
