#pragma once
#include "atom.core.h"
#include "atom/engine/inputs/keyboard_events.h"
#include "atom/engine/inputs/mouse_events.h"
#include "atom/engine/window/window_events.h"

namespace atom::engine
{
    /// --------------------------------------------------------------------------------------------
    ///
    /// --------------------------------------------------------------------------------------------
    class layer
        : public window_event_listener
        , public keyboard_event_listener
        , public mouse_event_listener
    {
    public:
        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        layer(string name)
            : _name(move(name))
        {}

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual ~layer() {}

    public:
        /// ----------------------------------------------------------------------------------------
        /// maybe we will keep this only for debug.
        /// ----------------------------------------------------------------------------------------
        auto get_name() -> string_view
        {
            return _name;
        }

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual auto on_attach() -> void {}

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual auto on_deattach() -> void {}

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual auto on_update() -> void {}

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual auto handle(window_event& event) -> void {}

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual auto handle(keyboard_event& event) -> void {}

        /// ----------------------------------------------------------------------------------------
        ///
        /// ----------------------------------------------------------------------------------------
        virtual auto handle(mouse_event& event) -> void {}

    private:
        const string _name;
    };
}
